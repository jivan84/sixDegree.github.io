<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SixDegree</title>
  <subtitle>host by chenjin</subtitle>
  <link href="//atom.xml" rel="self"/>
  
  <link href="http://sixdegree.github.io/"/>
  <updated>2016-04-17T09:44:58.541Z</updated>
  <id>http://sixdegree.github.io/</id>
  
  <author>
    <name>Chen Jin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于NodeJS解析Markdown</title>
    <link href="http://sixdegree.github.io/2016/01/21/NodeJS-Markdown.html"/>
    <id>http://sixdegree.github.io/2016/01/21/NodeJS-Markdown.html</id>
    <published>2016-01-20T16:00:00.000Z</published>
    <updated>2016-04-17T09:44:58.541Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;使用marked解析markdown文章的基本命令和API介绍；&lt;/li&gt;
&lt;li&gt;从源码分析了marked的处理解析过程，方便以后做扩展；&lt;/li&gt;
&lt;li&gt;加入Highlight和MathJax扩展渲染页面和Issues介绍；&lt;/li&gt;
&lt;li&gt;一些常用markdown编辑器推荐；&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;header-1&quot;&gt;前言&lt;/h3&gt;
&lt;p&gt;使用nodejs模块marked解析Markdown文章&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;优点：&lt;/strong&gt; &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;前后端，不同OS 都可使用&lt;/li&gt;
&lt;li&gt;开源，易扩展&lt;/li&gt;
&lt;li&gt;速度比较快 (通过RegEx匹配解析)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;应用举例：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;作为markdown编辑器&lt;ul&gt;
&lt;li&gt;网上各个markdown编辑器的规则、功能、风格、依赖平台等都有不统一，导出不理想，自定制有局限，无法做扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;自由加入各个开发项目中&lt;ul&gt;
&lt;li&gt;static site generator&lt;/li&gt;
&lt;li&gt;online editor&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;header-2&quot;&gt;1. 搭建测试环境&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;&amp;gt; &lt;span class=&quot;built_in&quot;&gt;mkdir&lt;/span&gt; node-marked
&amp;gt; &lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; node-marked
&amp;gt; npm init
&amp;gt; npm install marked --save-dev
&amp;gt; npm install &lt;span class=&quot;keyword&quot;&gt;highlight&lt;/span&gt;.js --save-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;header-3&quot;&gt;2. 使用 Marked Cmd&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;&amp;gt; npm install marked -g
&amp;gt; marked -i articles/01.md
&amp;gt; marked -i articles/01.md -t
&amp;gt; marked -i articles/01.md -o pages/01.html
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;-o, –output&lt;/strong&gt;: 指定输出文件，默认为当前控制台&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-i, –input&lt;/strong&gt;: 指定输入文件或最后一个参数，默认为当前控制台输入&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-t, –tokens&lt;/strong&gt;: 输出token流代替HTML&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;–pedantic&lt;/strong&gt;: 只解析符合markdown.pl定义的，不修正markdown的错误&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;–gfm&lt;/strong&gt;: 启动Github样式的Markdown，参考 &lt;a href=&quot;http://help.github.com/articles/github-flavored-markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github-flavored-markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;–breaks&lt;/strong&gt;: 支持Github换行符，必须打开gfm选项&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;–tables&lt;/strong&gt;: 支持Github表格，必须打开gfm选项&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;–sanitize&lt;/strong&gt;: 原始输出，忽略HTML标签&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;–smart-lists&lt;/strong&gt;: 优化列表输出&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;–lang-prefix [prefix]&lt;/strong&gt;: 设置前置样式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;–no-etc&lt;/strong&gt;: 选择的反正标识&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;–silent&lt;/strong&gt;: 不输出错误信息&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-h, –help&lt;/strong&gt;: 帮助信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;header-4&quot;&gt;3. 使用 Marked API&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;API&lt;/strong&gt;  具体可参考 &lt;a href=&quot;https://github.com/chjj/marked&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub Marked&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;marked(markdownString [,options] [,callback])
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;header-5&quot;&gt;3.1 Minimal usage&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; marked=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;marked&quot;&lt;/span&gt;);
&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(marked(&lt;span class=&quot;string&quot;&gt;&quot;I am using marked api!&quot;&lt;/span&gt;));
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;&amp;gt; node &lt;span class=&quot;number&quot;&gt;01&lt;/span&gt;
&lt;span class=&quot;symbol&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;I &lt;span class=&quot;keyword&quot;&gt;am&lt;/span&gt; using marked api!&amp;lt;/&lt;span class=&quot;keyword&quot;&gt;p&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;header-6&quot;&gt;3.2 Setting options example&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; marked=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;marked&quot;&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; highlight=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;highlight.js&quot;&lt;/span&gt;);
marked.setOptions({
    gfm: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,
    tables: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,
    breaks: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,
    pedantic: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,
    sanitize: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,
    smartLists: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,
    smartypants: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,
    codePrefix:&lt;span class=&quot;string&quot;&gt;&quot;hljs&quot;&lt;/span&gt;,
    tableClass:&lt;span class=&quot;string&quot;&gt;&quot;table&quot;&lt;/span&gt;,
    highlight:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;code,lang&lt;/span&gt;) &lt;/span&gt;{
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; highlight.highlightAuto(code,[lang]).value;
    }
});
&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(marked(markdownString));
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;&amp;gt; node 01
&amp;lt;h3 id=&quot;i-am-using-marked-api-&quot;&amp;gt;I am using marked api!&amp;lt;/h3&amp;gt;
&amp;lt;pre&amp;gt;&amp;lt;code class=&quot;lang-js&quot;&amp;gt; &amp;lt;span class=&quot;hljs-built_in&quot;&amp;gt;console&amp;lt;/span&amp;gt;.log(&amp;lt;span class=&quot;hljs-string&quot;&amp;gt;&#39;Hello world!&#39;&amp;lt;/span&amp;gt;);
&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;header-7&quot;&gt;3.3 Browser&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;nullhtml&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Marked in the browser&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;lib/marked.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;content&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;
    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;content&#39;&lt;/span&gt;).innerHTML =
      marked(&lt;span class=&quot;string&quot;&gt;&#39;# Marked in browser\n\nRendered by **marked**.&#39;&lt;/span&gt;);
  &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&quot;header-8&quot;&gt;4. Marked 解析说明&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;marked&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;src,opt,callback&lt;/span&gt;)&lt;/span&gt;{
    ...
    opt = merge({}, marked.defaults, opt);
    ...
    tokens = Lexer.lex(src, opt);
    ...
    out=Parser.parse(tokens,opt);
    ...
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;header-9&quot;&gt;4.1 解析过程&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Lexer&lt;/strong&gt;: Block Level Render =&amp;gt; tokens&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Parser&lt;/strong&gt;: Parse tokens =&amp;gt; html&lt;br&gt; each token =&amp;gt; &lt;strong&gt;Render&lt;/strong&gt; &amp;amp;&amp;amp; &lt;strong&gt;InlineLexer&lt;/strong&gt;(Inline Level Render ) =&amp;gt; html&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;header-10&quot;&gt;4.2 核心类介绍&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;1. Lexer ( Block Level Render )&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; block={...}        &lt;span class=&quot;comment&quot;&gt;//定义块级解析规则（正则表达式）&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;//newline,code,fences,hr,heading,nptable,lheading,blockquote,list,html,def,table,paragraph,text&lt;/span&gt;

Lexer.rules=block;
Lexer.lex = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;src, options&lt;/span&gt;) &lt;/span&gt;{
  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; lexer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Lexer(options);
  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; lexer.lex(src);
};

Lexer.prototype.lex         &lt;span class=&quot;comment&quot;&gt;//调用 Lexer.prototype.token&lt;/span&gt;
Lexer.prototype.token       &lt;span class=&quot;comment&quot;&gt;//根据rules解析返回tokens数组&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;2. Parser ( Parse Tokens to HTML )&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;Parser.parse = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;tokens, options, renderer&lt;/span&gt;) &lt;/span&gt;{
  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; parser = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Parser(options, renderer);
  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; parser.parse(tokens);
};

Parser.prototype.parse    &lt;span class=&quot;comment&quot;&gt;//调用 Parser.prototype.tok 逐个解析token&lt;/span&gt;
Parser.prototype.tok      &lt;span class=&quot;comment&quot;&gt;//根据token.type调用Render的相应方法进行渲染 &lt;/span&gt;
ps: 有些token在调用Render渲染前会预先调用InlineLex进行预处理
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;3. Render ( Render Each Token to HTML )&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;Renderer.prototype.code
Renderer.prototype.blockquote
Renderer.prototype.html
Renderer.prototype.heading
Renderer.prototype.hr
Renderer.prototype.list
Renderer.prototype.listitem
Renderer.prototype.paragraph
Renderer.prototype.table 
Renderer.prototype.tablerow
Renderer.prototype.tablecell
Renderer.prototype.strong
Renderer.prototype.em
Renderer.prototype.codespan
Renderer.prototype.br
Renderer.prototype.del
Renderer.prototype.link
Renderer.prototype.image
Renderer.prototype.text
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;4. InlineLexer ( Inline Level Renderer )&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; inline={...}     &lt;span class=&quot;comment&quot;&gt;//定义行级解析规则（正则表达式）&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;//escape,autolink,url,tag,link,reflink,nolink,strong,em,code,br,del,text&lt;/span&gt;

InlineLexer.rules = inline;
InlineLexer.output = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;src, links, options&lt;/span&gt;) &lt;/span&gt;{
  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; inline = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; InlineLexer(links, options);
  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; inline.output(src);
};

InlineLexer.prototype.output     &lt;span class=&quot;comment&quot;&gt;//根据rules解析，返回字符串&lt;/span&gt;
ps: 有些匹配项会调用Render的相应方法进行渲染
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&quot;header-11&quot;&gt;5. Marked 扩展&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在了解了marked的解析过程后，&lt;br&gt;对于一些无法通过marked本身提供的配置选项完成的特殊功能，&lt;br&gt;可以自己在上面拓展一些功能（这也是会选择marked的原因之一）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这里列举两个比较常用的拓展:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加&lt;code&gt;TOC(HeaderAnchor)&lt;/code&gt;功能；&lt;/li&gt;
&lt;li&gt;增加解析&lt;code&gt;meta&lt;/code&gt;功能；&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;header-12&quot;&gt;5.1 拓展：增加 TOC 功能 ( HeaderAnchor )&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;nullmarkdown&quot;&gt;[TOC]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;1. Lexer&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; block = {
    ...
     toc: &lt;span class=&quot;regexp&quot;&gt;/^\[TOC\]\n/&lt;/span&gt;,
};

Lexer.prototype.token = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;src, top, bq&lt;/span&gt;) &lt;/span&gt;{
    ...
    var tocIndex=&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;
    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(src){
        ...
        if(cap=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.rules.toc.exec(src)){
            &lt;span class=&quot;comment&quot;&gt;//console.log(&quot;token toc&quot;);&lt;/span&gt;
            src = src.substring(cap[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].length);
            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens.push({type:&lt;span class=&quot;string&quot;&gt;&#39;toc&#39;&lt;/span&gt;});
            tocIndex=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens.length&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;
            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;
        }
        ...
    }
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(tocIndex&amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;){
        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; toc=[];
        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens.length;i++){
          &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens[i].type===&lt;span class=&quot;string&quot;&gt;&#39;heading&#39;&lt;/span&gt;)
            toc.push(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens[i]);
        }
        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens[tocIndex]={type:&lt;span class=&quot;string&quot;&gt;&quot;toc&quot;&lt;/span&gt;,datas:toc};
    }
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens;
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;2. Parser&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;Parser.prototype.tok = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{
  &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.token.type){
    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;toc&#39;&lt;/span&gt;:{
      &lt;span class=&quot;comment&quot;&gt;//console.log(&quot;parse toc&quot;);&lt;/span&gt;
      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; datas=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.token.datas;
      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;datas.length;i++){
        datas[i].raw=datas[i].text;
        datas[i].text=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.inline.output(datas[i].text);
      }
      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.renderer.toc(datas);
    }
    ...
  }
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;3. Render&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;Renderer.prototype.toc = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;datas&lt;/span&gt;) &lt;/span&gt;{
  &lt;span class=&quot;comment&quot;&gt;//console.log(&quot;render toc&quot;);&lt;/span&gt;
  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tocStr=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,indentStr=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,item=&lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;;
  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;datas.length;i++){
    item=datas[i];
    indentStr=&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;
    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;j&amp;lt;item.depth&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;j++)
        indentStr+=&lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;nbsp;&amp;amp;nbsp;&#39;&lt;/span&gt;;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; id=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.options.headerPrefix+item.raw.toLowerCase().replace(&lt;span class=&quot;regexp&quot;&gt;/[^\w]+/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt;);
    tocStr+=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;li&amp;gt;&quot;&lt;/span&gt;+indentStr+&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;a href=&#39;#&quot;&lt;/span&gt;+id+&lt;span class=&quot;string&quot;&gt;&quot;&#39;&amp;gt;&quot;&lt;/span&gt;+item.text+&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&quot;&lt;/span&gt;;
  }
  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.list(tocStr,&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;4. 使用示例&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; marked=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;./marked-extend&quot;&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fs=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;fs&quot;&lt;/span&gt;);
fs.readFile(&lt;span class=&quot;string&quot;&gt;&quot;articles/01.md&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;utf8&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err,data&lt;/span&gt;)&lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result=marked(data);
    fs.writeFile(&lt;span class=&quot;string&quot;&gt;&quot;pages/01-1.html&quot;&lt;/span&gt;,result);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;header-13&quot;&gt;5.2 拓展：增加解析 MetaHeader&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&quot;nullmarkdown&quot;&gt;--- 
title: 用Middleman搭建静态博客
tags: web, static
&lt;span class=&quot;section&quot;&gt;description: Build Static Blog by Middleman
---&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;1. Lexer&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; block = {
    ...
    meta:&lt;span class=&quot;regexp&quot;&gt;/^-{3,}\s*?\n([\s\S]*?)\n-{3,}/&lt;/span&gt;, 
    metaItem:&lt;span class=&quot;regexp&quot;&gt;/(\S+)\s*?:\s*([\s\S]*?)(?=$|\n)/g&lt;/span&gt;,
};

Lexer.prototype.token = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;src, top, bq&lt;/span&gt;) &lt;/span&gt;{
    ...
    var tocIndex=&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;
    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(src){
        ...
        if(cap=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.rules.meta.exec(src)){
            src=src.substring(cap[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].length);
            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; meta={};
            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;((item=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.rules.metaItem.exec(cap[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]))!=&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;){
                &lt;span class=&quot;comment&quot;&gt;//console.log(item[1]+&quot;:&quot;+item[2]);&lt;/span&gt;
                meta[item[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]]=item[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];
            }
            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens.push({type:&lt;span class=&quot;string&quot;&gt;&quot;meta&quot;&lt;/span&gt;,datas:meta});
            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;
        }
        ...
    }
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens;
};

Lexer.prototype.getToken=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;tokens,type&lt;/span&gt;)&lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; token=&lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;;
    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;tokens.length;i++){
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(tokens[i].type===type){
          token=tokens[i];
          &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;
        }
    }
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; token;
};
&lt;span class=&quot;comment&quot;&gt;// Static Method&lt;/span&gt;
Lexer.getToken=Lexer.prototype.getToken;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;2. Parser&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;Parser.prototype.tok = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{
  &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.token.type){
    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;meta&#39;&lt;/span&gt;:{
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;
    }
    ...
  }
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;3. 使用示例&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; marked=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;./marked-extend&quot;&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fs=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;fs&quot;&lt;/span&gt;);
fs.readFile(&lt;span class=&quot;string&quot;&gt;&quot;articles/01.md&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;utf8&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err,data&lt;/span&gt;)&lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Lexer=marked.Lexer;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; lexer=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Lexer();
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tokens=lexer.lex(data);

    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tocToken=lexer.getToken(tokens,&lt;span class=&quot;string&quot;&gt;&quot;toc&quot;&lt;/span&gt;);
    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;toc:&quot;&lt;/span&gt;);
    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(tocToken);

    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; metaToken=lexer.getToken(tokens,&lt;span class=&quot;string&quot;&gt;&quot;meta&quot;&lt;/span&gt;);
    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;meta:&quot;&lt;/span&gt;);
    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(metaToken);

    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result=marked.parser(tokens);
    fs.writeFile(&lt;span class=&quot;string&quot;&gt;&quot;pages/01-2.html&quot;&lt;/span&gt;,result);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&quot;header-14&quot;&gt;6. HTML 结果页面扩展&lt;/h3&gt;
&lt;h4 id=&quot;header-15&quot;&gt;6.1 使用 Highlight.js 进行语法高亮&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;1.Highlight介绍&lt;/strong&gt; ( 参考 &lt;a href=&quot;https://highlightjs.org/static/demo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LiveDemo&lt;/a&gt; | &lt;a href=&quot;https://highlightjs.org/usage/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Usage&lt;/a&gt; | &lt;a href=&quot;http://highlightjs.readthedocs.org/en/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Doc&amp;amp;API&lt;/a&gt; )&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用在线Highligh&lt;/strong&gt; ( 可在线定制，参考 &lt;a href=&quot;https://highlightjs.org/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Getting highlight.js&lt;/a&gt;,&lt;a href=&quot;https://cdnjs.com/libraries/highlight.js/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CDN highlight.js&lt;/a&gt; )&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullhtml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/styles/default.min.css&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;

&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/highlight.min.js&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;handlebars&quot;&gt;&lt;span class=&quot;xml&quot;&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.9.1/languages/markdown.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;
    hljs.initHighlightingOnLoad();
&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;使用本地构建的Highligh&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;&amp;gt; bower install &lt;span class=&quot;keyword&quot;&gt;highlight&lt;/span&gt; --save-dev
&amp;gt; &lt;span class=&quot;keyword&quot;&gt;cd&lt;/span&gt; bower_components/&lt;span class=&quot;keyword&quot;&gt;highlight&lt;/span&gt;

//构建Highligh
&amp;gt; npm install
&amp;gt; node tools/build.js -t &lt;span class=&quot;keyword&quot;&gt;all&lt;/span&gt;    // build &lt;span class=&quot;keyword&quot;&gt;all&lt;/span&gt; [ node cdn  browser]
（或者只构建browser，使用 node tools/build.js -t browser）
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; 若执行报类似如下错误，请升级node，或下载highlight#8 ( bower install highlight#8 )&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;build     = require(`./${commander.target}`);
                    ^
SyntaxError: Unexpected token ILLEGAL
    at Module._compile (module.js:439:25)
    at Object.Module._extensions..js (module.js:474:10)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Function.Module.runMain (module.js:497:10)
    at startup (node.js:119:16)
    at node.js:902:3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;nullhtml&quot;&gt;使用构建的browser highlight
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;../bower_components/highlight/build/browser/demo/styles/default.css&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;

&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;../bower_components/highlight/build/browser/highlight.pack.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;
    hljs.initHighlightingOnLoad();
&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构建出的node highlight 和通过 npm install highlight.js 获取的highlight是一致的&lt;/li&gt;
&lt;li&gt;要在前端网页中使用node highlight，还需通过browserify插件转换 （具体使用可参考gulp篇）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. 在Marked中使用highlight.js&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;前端只加载highlight css文件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullhtml&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Marked Highlight&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;../bower_components/highlight/build/browser/demo/styles/tomorrow-night-bright.css&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;
    {content}
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;后端调用highlight解析markdown的code内容&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; marked=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;./marked-extend&quot;&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fs=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;fs&quot;&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; highlight=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;highlight.js&quot;&lt;/span&gt;);

marked.setOptions({
    langPrefix:&lt;span class=&quot;string&quot;&gt;&quot;hljs &quot;&lt;/span&gt;,
    highlight:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;code,lang&lt;/span&gt;) &lt;/span&gt;{
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; highlight.highlightAuto(code,[lang]).value;
    }
});

fs.readFile(&lt;span class=&quot;string&quot;&gt;&quot;articles/test.md&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;utf8&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err,data&lt;/span&gt;)&lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result=marked(data);
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tpl=fs.readFileSync(&lt;span class=&quot;string&quot;&gt;&quot;template/highlight-03.html&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;);
    fs.writeFile(&lt;span class=&quot;string&quot;&gt;&quot;pages/highlight-03.html&quot;&lt;/span&gt;,tpl.replace(&lt;span class=&quot;string&quot;&gt;&quot;{content}&quot;&lt;/span&gt;,result));
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;3.调用区别&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前端调用&lt;code&gt;hljs.initHighlightingOnLoad();&lt;/code&gt;  识别解析&lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;...&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/code&gt;块&lt;ul&gt;
&lt;li&gt;若无language设置，则自动识别添加一种languange&lt;br&gt;  &lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;hljs html&amp;quot;&amp;gt;...&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;若有languange设置&lt;ul&gt;
&lt;li&gt;是已注册的languange，则使用相应的languange js进行解析&lt;br&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;hljs javascript&amp;quot;&amp;gt;...&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;是未注册的languange，则不解析&lt;br&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;code class=&amp;quot;nohighlight&amp;quot;&amp;gt;...&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;后端marked解析code&lt;ul&gt;
&lt;li&gt;若无languange设置，则不会在&lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;标签上增加class&lt;/li&gt;
&lt;li&gt;若有languange设置，则会在&lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;标签上增加class（langPrefix+languange）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;Renderer.prototype.code = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;code, lang, escaped&lt;/span&gt;) &lt;/span&gt;{
  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.options.highlight) {
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; out = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.options.highlight(code, lang);
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (out != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; out !== code) {
      escaped = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;
      code = out;
    }
  }

  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!lang) {
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&#39;&lt;/span&gt;+ (escaped ? code : &lt;span class=&quot;built_in&quot;&gt;escape&lt;/span&gt;(code, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)) + &lt;span class=&quot;string&quot;&gt;&#39;\n&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&#39;&lt;/span&gt;;
  }

  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;pre&amp;gt;&amp;lt;code class=&quot;&#39;&lt;/span&gt;
    + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.options.langPrefix
    + &lt;span class=&quot;built_in&quot;&gt;escape&lt;/span&gt;(lang, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)
    + &lt;span class=&quot;string&quot;&gt;&#39;&quot;&amp;gt;&#39;&lt;/span&gt;
    + (escaped ? code : &lt;span class=&quot;built_in&quot;&gt;escape&lt;/span&gt;(code, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;))
    + &lt;span class=&quot;string&quot;&gt;&#39;\n&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;\n&#39;&lt;/span&gt;;
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;PS: &lt;/strong&gt; 可以修改前后端以统一两种调用highlight的效果&lt;/p&gt;
&lt;h4 id=&quot;header-16&quot;&gt;6.2 增加 LaTex 公式支持&lt;/h4&gt;
&lt;p&gt;使用 MathJax （参考 &lt;a href=&quot;http://mlworks.cn/posts/introduction-to-mathjax-and-latex-expression/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LaTex&lt;/a&gt;,&lt;a href=&quot;http://mathjax-chinese-doc.readthedocs.org/en/latest/configuration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MathJax Doc&lt;/a&gt;）&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullhtml&quot;&gt;//从CDN加载MathJax
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;
&lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
//或加载通过bower install MathJax --save-dev 获取到本地的MathJax
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;../bower_components/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;

//可添加配置，eg：
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/x-mathjax-config&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;
    MathJax.Hub.Config({
    ...
    });
&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&quot;header-17&quot;&gt;7. Issues&lt;/h3&gt;
&lt;h4 id=&quot;header-18&quot;&gt;7.1 Marked TOC heading id 乱码&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;marked中解析出的&lt;code&gt;&amp;lt;hx&amp;gt;&lt;/code&gt;标签id生成规则为：&lt;br&gt;&lt;code&gt;this.options.headerPrefix+ raw.toLowerCase().replace(/[^\w]+/g, &amp;#39;-&amp;#39;)&lt;/code&gt;&lt;br&gt;( 将文本中空格替换为&lt;code&gt;-&lt;/code&gt; )&lt;/p&gt;
&lt;p&gt;若是中文或其他特殊字符会导致难以Anchor&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;自定义&lt;code&gt;h&lt;/code&gt;标签的id生成规则：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.Lexer&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;Lexer.prototype.token = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;src, top, bq&lt;/span&gt;) &lt;/span&gt;{
    ...
    while(src){
        ...
    }
     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(tocIndex&amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.options.reHeader){
        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; toc=[];
        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens.length;i++){
          &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens[i].type===&lt;span class=&quot;string&quot;&gt;&#39;heading&#39;&lt;/span&gt;){
            toc.push(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens[i]);
            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens[i].index=toc.length;   &lt;span class=&quot;comment&quot;&gt;// add heading index&lt;/span&gt;
          }
        }
        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens[tocIndex]={type:&lt;span class=&quot;string&quot;&gt;&quot;toc&quot;&lt;/span&gt;,datas:toc};
    }
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.tokens;
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;2.Parser&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;Parser.prototype.tok = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{
     &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.token.type) {
        ...
        case &lt;span class=&quot;string&quot;&gt;&#39;heading&#39;&lt;/span&gt;: {
          &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.renderer.heading(
            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.inline.output(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.token.text),
            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.token.depth,
            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.token.text,&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.token.index);  &lt;span class=&quot;comment&quot;&gt;// add heading index&lt;/span&gt;
        }
        ...
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;3.Render&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;Renderer.prototype.heading = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;text, level, raw, index&lt;/span&gt;) &lt;/span&gt;{
  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;h&#39;&lt;/span&gt;+ level
    + &lt;span class=&quot;string&quot;&gt;&#39; id=&quot;&#39;&lt;/span&gt;
    + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.options.headerPrefix
    &lt;span class=&quot;comment&quot;&gt;//+ raw.toLowerCase().replace(/[^\w]+/g, &#39;-&#39;)&lt;/span&gt;
    + (index?index:raw.toLowerCase().replace(&lt;span class=&quot;regexp&quot;&gt;/[^\w]+/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt;))
    + &lt;span class=&quot;string&quot;&gt;&#39;&quot;&amp;gt;&#39;&lt;/span&gt;
    + text+ &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;/h&#39;&lt;/span&gt;+ level+ &lt;span class=&quot;string&quot;&gt;&#39;&amp;gt;\n&#39;&lt;/span&gt;;
};
Renderer.prototype.toc = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;datas&lt;/span&gt;) &lt;/span&gt;{
    ...
    &lt;span class=&quot;comment&quot;&gt;//var id=this.options.headerPrefix+item.raw.toLowerCase().replace(/[^\w]+/g, &#39;-&#39;);&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; id=&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.options.headerPrefix+(item.index?item.index:item.raw.toLowerCase().replace(&lt;span class=&quot;regexp&quot;&gt;/[^\w]+/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt;));
    ...
};
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;header-19&quot;&gt;7.2 Highlight &amp;amp; Markdown Conflict with MathJax&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;1.约定markdown中的LaxTex公式&lt;/strong&gt;&lt;br&gt;含有LaxTex公式的包含在&lt;code&gt;&amp;lt;pre&amp;gt;&amp;lt;/pre&amp;gt;&lt;/code&gt; 标签中&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 添加MathJax配置&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullhtml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/x-mathjax-config&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;actionscript&quot;&gt;
    MathJax.Hub.Config({
          tex2jax: {
              &lt;span class=&quot;comment&quot;&gt;//skipTags remove &#39;pre&#39; entry&lt;/span&gt;
              skipTags: [&lt;span class=&quot;string&quot;&gt;&#39;script&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;noscript&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;style&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;textarea&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;code&#39;&lt;/span&gt;]
        }
    });
&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&quot;header-20&quot;&gt;8. 最终版&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;项目源码 &lt;a href=&quot;https://github.com/sixDegree/node-marked&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;header-21&quot;&gt;9. 各种Markdown编辑器&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Windos版，推荐 &lt;a href=&quot;http://pad.haroopress.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Haroopad&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OS X 版，推荐 &lt;a href=&quot;http://pad.haroopress.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Haroopad&lt;/a&gt;,&lt;a href=&quot;http://macdown.uranusjr.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MacDown&lt;/a&gt;,&lt;a href=&quot;http://www.textnutwriter.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;TextNut&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Online版，推荐 &lt;a href=&quot;http://www.jianshu.com/p/b3QtRo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简书&lt;/a&gt;，&lt;a href=&quot;https://maxiang.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;马克飞象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;如果不嫌麻烦，也可以使用sublime+plugin自定制&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;header-22&quot;&gt;10. 参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;markdown&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://lutaf.com/markdown-simple-usage.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;markdown 简明语法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sspai.com/25137&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;认识与入门 Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;marked&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/chjj/marked&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;chjj/marked&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.fens.me/nodejs-markdown-marked/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Marked高效的Markdown解析器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sentsin.com/web/1151.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;动手开发更好用的markdown编辑器-07扩展语法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;markdown editor&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.williamlong.info/archives/4319.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;好用的Markdown编辑器一览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/6c157af09e84&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mac 下两款 Markdown 编辑器 Mou/MacDown 大 PK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.leanote.com/post/54bfa17b8404f03097000000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;近乎完美的 Markdown 写作体验 - Sublime Text 3 + OmniMarkupPreviewer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;highlight&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/spy19881201/article/details/38866033&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;代码高亮 highlightjs 使用文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://highlightjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;highlightjs org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://highlightjs.readthedocs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;highlightjs doc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;mathJax&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mlworks.cn/posts/introduction-to-mathjax-and-latex-expression/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mathjax与LaTex公式简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mathjax.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mathjax org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://docs.mathjax.org/en/latest/start.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mathjax doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mathjax-chinese-doc.readthedocs.org/en/latest/configuration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;加载和配置MathJax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      extended functional nodejs marked module to parsing markdown file
    
    </summary>
    
    
      <category term="NodeJs" scheme="http://sixdegree.github.io/tags/NodeJs/"/>
    
  </entry>
  
  <entry>
    <title>ReactJS高阶之Flux</title>
    <link href="http://sixdegree.github.io/2016/01/06/ReactJS-Flux.html"/>
    <id>http://sixdegree.github.io/2016/01/06/ReactJS-Flux.html</id>
    <published>2016-01-05T16:00:00.000Z</published>
    <updated>2016-04-12T08:12:51.028Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;简单介绍了Flux架构；&lt;/li&gt;
&lt;li&gt;通过示例介绍了在Flux思想之上的一些优秀实现库（比如：reflux，redux）；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sixDegree/react-advance&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;My Demos&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;header-1&quot;&gt;Flux&lt;/h2&gt;
&lt;p&gt;单向数据流的架构模式（在 MVC 中属于M层）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;╔═════════╗       ╔════════╗       ╔═════════════════╗
║ Actions ║──────&amp;gt;║ Stores ║──────&amp;gt;║ View Components ║
╚═════════╝       ╚════════╝       ╚═════════════════╝
     ^                                      │
     └──────────────────────────────────────┘
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;基于单向数据流如何更好的管理数据，在 Views 与数据之间进行解耦 ，Store 是关键&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;View 层 Dispatch actions（分发操作）&lt;/li&gt;
&lt;li&gt;Store 响应事件，触发 change事件&lt;/li&gt;
&lt;li&gt;View 层响应change事件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在flux思想之上，有很多优秀的库，比如：reflux，redux&lt;/p&gt;
&lt;h2 id=&quot;header-2&quot;&gt;Reflux&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/reflux/refluxjs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt; | &lt;a href=&quot;http://segmentfault.com/a/1190000002793786?utm_source=tuicool&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reflux 介绍&lt;/a&gt; | &lt;a href=&quot;http://abruzzi.github.com/2015/11/get-started-with-reflux&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sample&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载包：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; npm install reflux --save
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Action：定义方法&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Reflux=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;reflux&quot;&lt;/span&gt;);
&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports=Reflux.createActions([
 &lt;span class=&quot;string&quot;&gt;&quot;listXxx&quot;&lt;/span&gt;,
 &lt;span class=&quot;string&quot;&gt;&quot;getXxx&quot;&lt;/span&gt;,
 &lt;span class=&quot;string&quot;&gt;&quot;updateXxx&quot;&lt;/span&gt;,
 &lt;span class=&quot;string&quot;&gt;&quot;createXxx&quot;&lt;/span&gt;,
 ...
])
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Store：监听actions&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//xxx-store.jsx&lt;/span&gt;
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Reflux=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;reflux&quot;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Api=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;../utils/api&quot;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xxxActions=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;../actions/xxx-action&quot;&lt;/span&gt;);

 &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports=Reflux.createStore({
     listenables:[XxxActions],        &lt;span class=&quot;comment&quot;&gt;// 监听actions&lt;/span&gt;
     data:{},

     &lt;span class=&quot;comment&quot;&gt;//添加Action中定义的同名函数&lt;/span&gt;
     listXxx:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
         &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Api.get(&lt;span class=&quot;string&quot;&gt;&quot;...&quot;&lt;/span&gt;)
                 .then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;json&lt;/span&gt;)&lt;/span&gt;{
                     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(json &amp;amp;&amp;amp; json.success)
                         &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.data=json.data;
                     &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.trigger(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.data,json);    &lt;span class=&quot;comment&quot;&gt;//触发（监听此Store的Components会接收到）&lt;/span&gt;
                 }.bind(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;));
     },
     ...
     &lt;span class=&quot;comment&quot;&gt;//也可添加Store自己的函数&lt;/span&gt;
 });
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Component: 调用Action（会触发调用相应的Store方法）或Store方法，监听Store变化&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Reflux=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;reflux&quot;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; XxxActions=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;../action/xxx-action&quot;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; XxxStore=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;../stores/receiver-store&quot;&lt;/span&gt;);

 &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports=React.createClass({
     &lt;span class=&quot;comment&quot;&gt;//监听Store，捕获到则调用onChange方法（相当于callback）&lt;/span&gt;
     mixins:[Reflux.listenTo(XxxStore,&lt;span class=&quot;string&quot;&gt;&quot;onChange&quot;&lt;/span&gt;)],
     onChange:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data,result&lt;/span&gt;)&lt;/span&gt;{
         &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setState({...});
     },
     componentWillMount:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
         XxxActions.listXxx();
     },
     ...
 });
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;header-3&quot;&gt;Redux&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://camsong.github.io/redux-in-chinese/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文文档&lt;/a&gt; | &lt;a href=&quot;https://segmentfault.com/a/1190000003503338#articleHeader5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux 介绍&lt;/a&gt; | &lt;a href=&quot;http://zhenhua-lee.github.io/react/redux.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;解读redux工作原理&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/01/06/redux.png&quot; alt=&quot;redux&quot;&gt;&lt;br&gt;（图片来自：&lt;a href=&quot;http://staltz.com/unidirectional-user-interface-architectures.html）&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://staltz.com/unidirectional-user-interface-architectures.html）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;store 是一个单一对象：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;store.getState()&lt;/code&gt; ：获取reducer的root state&lt;/li&gt;
&lt;li&gt;&lt;code&gt;store.dispatch(action)&lt;/code&gt; ： 向所有reducer分发action&lt;/li&gt;
&lt;li&gt;&lt;code&gt;store.subscribe(listener)&lt;/code&gt; ：注册 state 变化监听器&lt;/li&gt;
&lt;li&gt;&lt;code&gt;createStore(reducer, [initialState])&lt;/code&gt; 创建Store&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载包：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; npm install redux --save
&amp;gt; npm install react-redux --save
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;header-4&quot;&gt;基本使用示例&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Component&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; React=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react&quot;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ReactDOM=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react-dom&quot;&lt;/span&gt;);

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Counter=React.createClass({
     render:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
         &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (
           &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
             &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;{this.props.value}&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;span&lt;/span&gt;&amp;gt;&lt;/span&gt;
             &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;btn btn-default&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onClick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{this.props.onIncreaseClick}&lt;/span&gt;&amp;gt;&lt;/span&gt;Increase&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;
           &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
         )
     }
 });
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Store&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; redux=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;redux&quot;&lt;/span&gt;);

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; countRedux=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;state,action&lt;/span&gt;)&lt;/span&gt;{
     &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;(action.type){
         &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;INCREASE&#39;&lt;/span&gt;:
             &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; state+action.step;
     }
     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; state;
 }

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; store=redux.createStore(countRedux,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);
 store.subscribe(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
     &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(store.getState());
 });
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Action&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; increaseAction={type:&lt;span class=&quot;string&quot;&gt;&#39;INCREASE&#39;&lt;/span&gt;,step:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;};
 &lt;span class=&quot;comment&quot;&gt;//test&lt;/span&gt;
 store.dispatch(increaseAction);
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Container&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Provider=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react-redux&quot;&lt;/span&gt;).Provider;
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; connect=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react-redux&quot;&lt;/span&gt;).connect;

 &lt;span class=&quot;comment&quot;&gt;//Map Redux state to component props&lt;/span&gt;
 &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;mapStateToProps&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;state&lt;/span&gt;)&lt;/span&gt;{
     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {count:state}
 }
 &lt;span class=&quot;comment&quot;&gt;//Map Redux dispatch to component props&lt;/span&gt;
 &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;mapDispatchToProps&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;dispatch&lt;/span&gt;)&lt;/span&gt;{
     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {
         onIncreaseClick:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{dispatch(increaseAction);}
     }
 }

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; App=connect(mapStateToProps,mapDispatchToProps)(Counter)

 &lt;span class=&quot;comment&quot;&gt;// render&lt;/span&gt;
 ReactDOM.render(
   &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Provider&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;store&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{store}&lt;/span&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;App&lt;/span&gt; /&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;Provider&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;,
   &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;)
 );
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;header-5&quot;&gt;高阶使用示例&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/2016/01/06/redux-book.png&quot; alt=&quot;redux&quot;&gt;&lt;br&gt;（图片来自：&lt;a href=&quot;https://www.udemy.com/react-redux/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.udemy.com/react-redux/&lt;/a&gt; 教程）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;要点：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Reducer:&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bookReducer=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;state,action&lt;/span&gt;)&lt;/span&gt;{...};
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; activeBookReducer=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;state,action&lt;/span&gt;)&lt;/span&gt;{...};
 &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports=combineReducers({
     books:booksReducer,
     activeBook:activeBookReducer
 })
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Action Creator:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; selectBook=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;book&lt;/span&gt;)&lt;/span&gt;{
         &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;Selectd:&quot;&lt;/span&gt;+book.title);
         &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {type:&lt;span class=&quot;string&quot;&gt;&quot;BOOK_SELECTED&quot;&lt;/span&gt;,payload:book};
     }
     &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports={
         selectBook:selectBook
     }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Container:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bindActionCreators=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;redux&quot;&lt;/span&gt;).bindActionCreators;

 &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;mapDispatchToProps&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;dispatch&lt;/span&gt;)&lt;/span&gt;{
     &lt;span class=&quot;comment&quot;&gt;/*return {
         selectBook:function(book){dispatch({type:&#39;BOOK_SELECTED&#39;,payload:book})}
     }*/&lt;/span&gt;
     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bindActionCreators(BookActions,dispatch);
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt; 可使用middleware实现异步Action &lt;/strong&gt; （例如使用&lt;code&gt;redux-promise&lt;/code&gt; ）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/01/06/redux-book-middleware.png&quot; alt=&quot;redux&quot;&gt;&lt;br&gt;（图片来自：&lt;a href=&quot;https://www.udemy.com/react-redux/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.udemy.com/react-redux/&lt;/a&gt; 教程）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;要点：&lt;/strong&gt; 触发action，传递promise对象，使用middleware拦截直到响应，继续传递action到reducers&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载包&lt;code&gt;redux-promise&lt;/code&gt; (Redux Middleware) &amp;amp; &lt;code&gt;axios&lt;/code&gt; (Promise Request)：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; npm install redux-promise --save
&amp;gt; npm install axios --save
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Action：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; {type:&lt;span class=&quot;string&quot;&gt;&#39;BOOK_LIST&#39;&lt;/span&gt;,payload:axios.get(url);}
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reducer:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; booksReducer=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;state,action&lt;/span&gt;)&lt;/span&gt;{
     &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;(action.type){
         &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;BOOK_LIST&#39;&lt;/span&gt;:
             &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(action.payload.status==&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;){
                 &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [action.payload.data];
             }
     }
     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; state;
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Store&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; applyMiddleware=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;redux&quot;&lt;/span&gt;).applyMiddleware;
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ReduxPromise=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;redux-promise&quot;&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; createStoreWithMiddleware=applyMiddleware(ReduxPromise)(createStore);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; store=createStoreWithMiddleware(weatherReducers);
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;header-6&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Reflux &lt;a href=&quot;https://github.com/reflux/refluxjs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt; | &lt;a href=&quot;http://segmentfault.com/a/1190000002793786?utm_source=tuicool&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reflux 介绍&lt;/a&gt; | &lt;a href=&quot;http://abruzzi.github.com/2015/11/get-started-with-reflux&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sample&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Redux &lt;a href=&quot;https://github.com/rackt/react-redux&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt; | &lt;a href=&quot;http://camsong.github.io/redux-in-chinese/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文文档&lt;/a&gt; | &lt;a href=&quot;https://segmentfault.com/a/1190000003503338#articleHeader5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Redux 介绍&lt;/a&gt; | &lt;a href=&quot;http://zhenhua-lee.github.io/react/redux.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;解读redux工作原理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sixDegree/react-advance&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;My Demos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      introduce react flux
    
    </summary>
    
    
      <category term="ReactJs" scheme="http://sixdegree.github.io/tags/ReactJs/"/>
    
  </entry>
  
  <entry>
    <title>ReactJS高阶之Firebase</title>
    <link href="http://sixdegree.github.io/2016/01/05/ReactJS-Firebase.html"/>
    <id>http://sixdegree.github.io/2016/01/05/ReactJS-Firebase.html</id>
    <published>2016-01-04T16:00:00.000Z</published>
    <updated>2016-04-12T08:10:55.633Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;在ReactJS中使用FireBase提供实时数据云服务；&lt;/li&gt;
&lt;li&gt;介绍两种方式使用方式：直接使用和依赖reactFire；&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sixDegree/react-advance&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;My Demos&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;FireBase 提供实时数据云服务 &lt;a href=&quot;https://www.firebase.com/docs/web/quickstart.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Doc&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;直接上示例：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/01/05/firebase.PNG&quot; alt=&quot;my firebase&quot;&gt;&lt;br&gt;（下面示例使用的firebase结构）&lt;/p&gt;
&lt;h3 id=&quot;header-1&quot;&gt;直接使用firebase库&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;&amp;gt; npm install firebase --save

//或前端使用，直接从CDN获取
&amp;lt;script src=&lt;span class=&quot;string&quot;&gt;&quot;https://cdn.firebase.com/js/client/2.4.0/firebase.js&quot;&lt;/span&gt;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Firebase=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;firebase&quot;&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; DB_URL=&lt;span class=&quot;string&quot;&gt;&quot;https://&amp;lt;YOUR-FIREBASE-APP&amp;gt;.firebaseio.com/&quot;&lt;/span&gt;;
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Fb=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Firebase(DB_URL);

&lt;span class=&quot;comment&quot;&gt;/*
设置数据，可参考：https://www.firebase.com/docs/web/guide/saving-data.html
set(),update(),push(),transaction( )
push() function that generates a unique ID, or key, for each new child
*/&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;//username is key&lt;/span&gt;
Fb.child(&lt;span class=&quot;string&quot;&gt;&quot;users&quot;&lt;/span&gt;).child(username).set({username:xxx,password:xxx});
Fb.child(&lt;span class=&quot;string&quot;&gt;&quot;users&quot;&lt;/span&gt;).child(username).update({password:xxx});

&lt;span class=&quot;comment&quot;&gt;//generate a uniqueID as key&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; usersRef=Fb.child(&lt;span class=&quot;string&quot;&gt;&quot;users&quot;&lt;/span&gt;).push();
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; id=usersRef.key();
usersRef.push({username:xxx,password:xxx});

&lt;span class=&quot;comment&quot;&gt;/*
获取数据，可参考https://www.firebase.com/docs/web/guide/retrieving-data.html
Get:
    on(&#39;value&#39;,function(snapshot){xxxx})
    once(&#39;value&#39;,function(snapshot){xxxx})
Query:
    orderByChild(&quot;xxx&quot;),orderByKey(),orderByValue(),orderByPriority()
    limitToLast(count),limitToFirst(count)
    startAt(xxx),endAt(xxx),equalTo(xxx)
*/&lt;/span&gt;
Fb.child(&lt;span class=&quot;string&quot;&gt;&quot;users&quot;&lt;/span&gt;).child(username).once(&lt;span class=&quot;string&quot;&gt;&#39;value&#39;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;snapshot&lt;/span&gt;)&lt;/span&gt;{
    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(snapshot.key());
    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(snapshot.val());
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(snapshot.exists())
        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(snapshot.child(&lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;).val());
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;header-2&quot;&gt;通过reactFire使用firebase （在React中）&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ReactFire=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;reactfire&quot;&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Firebase=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;firebase&quot;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Component中：&lt;/span&gt;
componentWillMount:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;Question Will Mount...&quot;&lt;/span&gt;);
    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fb=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Firebase(rootUrl+&lt;span class=&quot;string&quot;&gt;&quot;questions/&quot;&lt;/span&gt;);
    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.bindAsArray(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fb,&lt;span class=&quot;string&quot;&gt;&quot;questions&quot;&lt;/span&gt;);        &lt;span class=&quot;comment&quot;&gt;// =&amp;gt; this.state.questions（当有变化时自动转换为数组，且调用this.setState({questions:xxx})； ）&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fb.on(&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.loadDataHandler);
},
loadDataHandler:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;Data Loaded&quot;&lt;/span&gt;);
},
addNewQuestion:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;newQuestion&lt;/span&gt;)&lt;/span&gt;{
    &lt;span class=&quot;comment&quot;&gt;//this.firebaseRefs.questions.push(newQuestion);&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fb.push(newQuestion);
    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setState({newQuestion:newQuestion});
},
voteUpdate:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;questionId,voteCount&lt;/span&gt;)&lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fb.child(questionId).update({voteCount:voteCount});
},
removeItem:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;question&lt;/span&gt;)&lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.fb.child(question[&lt;span class=&quot;string&quot;&gt;&quot;.key&quot;&lt;/span&gt;]).remove();
}
&lt;/code&gt;&lt;/pre&gt;
</content>
    
    <summary type="html">
    
      using firebase in reactJS by reactFire
    
    </summary>
    
    
      <category term="ReactJs" scheme="http://sixdegree.github.io/tags/ReactJs/"/>
    
  </entry>
  
  <entry>
    <title>ReactJS高阶之Router</title>
    <link href="http://sixdegree.github.io/2016/01/04/ReactJS-Router.html"/>
    <id>http://sixdegree.github.io/2016/01/04/ReactJS-Router.html</id>
    <published>2016-01-03T16:00:00.000Z</published>
    <updated>2016-04-12T01:04:05.079Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;使用 react-router 实现前端路由；&lt;/li&gt;
&lt;li&gt;通过一个实例介绍了结合react-router的Isomorphic使用；&lt;/li&gt;
&lt;li&gt;常见Issues&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sixDegree/react-advance&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;My Demos&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;header-1&quot;&gt;使用示例&lt;/h2&gt;
&lt;p&gt;使用 react-router 实现前端路由：建立在history上，方便进行路由管理&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt; &amp;gt; npm install react-router --save
 &amp;gt; npm install &lt;span class=&quot;keyword&quot;&gt;history&lt;/span&gt; --save
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;加载&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//app.js&lt;/span&gt;
     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; React=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react&quot;&lt;/span&gt;);
     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ReactDOM=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react-dom&quot;&lt;/span&gt;);

     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ReactRouter=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react-router&quot;&lt;/span&gt;);
     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Router=ReactRouter.Router;
     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Route=ReactRouter.Route;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用Router&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方式1：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; routes=(
      &amp;lt;Router&amp;gt;
          &amp;lt;Route path=&quot;/&quot; component={App}&amp;gt;
              &amp;lt;Route path=&quot;child/:id&quot; component={Child} /&amp;gt;
              &amp;lt;Route path=&quot;*&quot; component={NoMatch} /&amp;gt;
          &amp;lt;/Route&amp;gt;
      &amp;lt;/Router&amp;gt;
  );
  ReactDOM.render(routes,document.getElementById(&quot;app&quot;));
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方式二：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; routes={
      path:&lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt;,
      component:App,
      childRoutes:[
          {path:&lt;span class=&quot;string&quot;&gt;&quot;/child/:id&quot;&lt;/span&gt;,component:Child},
          {path:&lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;,component:NoMatch}
      ]
  };
  ReactDOM.render(&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Router&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;routes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{routes}&lt;/span&gt; /&amp;gt;&lt;/span&gt;,document.getElementById(&quot;app&quot;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;定义Components&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; App=React.createClass({
     render:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
         &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (
             &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
                 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Header&lt;/span&gt;/&amp;gt;&lt;/span&gt;
                 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                     {this.props.children || &quot;Welcome !&quot;}
                 &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
             &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
         )
     }
 });

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Header=React.createClass({
     render:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
         &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Header&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;)
     }
 })

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Child=React.createClass({
     render:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
         &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (
             &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt; I am Child {this.props.params.id} ! &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;
         )
     }
 });

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; NoMatch=React.createClass({
     render:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
         &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;No Match !&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;)
     }
 })
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; 路由的生命周期处理&lt;br&gt;进入时装载组件离开时卸载组件，不会一下把所有的组件都装载进来&lt;/p&gt;
&lt;h2 id=&quot;header-2&quot;&gt;History&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;createHashHistory&lt;/code&gt; (default) : 通过 hash 来实现，可以通过 window.location.hash 读取到 # 后的内容&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//has queryKey, eg: ?_k=ckuvup -&amp;gt; remove queryKey:&lt;/span&gt;
 ReactDOM.render(&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Router&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;routes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{routes}&lt;/span&gt; 
     &lt;span class=&quot;attr&quot;&gt;history&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{createHashHistory({queryKey:false})}/&lt;/span&gt;&amp;gt;&lt;/span&gt;,
     document.getElementById(&quot;app&quot;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;createMemoryHistory&lt;/code&gt; (test)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;createBrowserHistory&lt;/code&gt;    (production): run on server，HTML5 才有的新 API，可以用来操作浏览器的 session history (会话历史)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; createBrowserHistory =&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;history/lib/createBrowserHistory&quot;&lt;/span&gt;);
 ReactDOM.render(&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Router&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;routes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{routes}&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;history&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{createBrowserHistory()}&lt;/span&gt; /&amp;gt;&lt;/span&gt;,
     document.getElementById(&quot;app&quot;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt; Run Based on nodeJS (cmd: node app):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; express = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;express&#39;&lt;/span&gt;)
 &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; path = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;path&#39;&lt;/span&gt;)
 &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; port = process.env.PORT || &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;
 &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; app = express()

 &lt;span class=&quot;comment&quot;&gt;// serve static assets normally&lt;/span&gt;
 app.use(express.static(__dirname + &lt;span class=&quot;string&quot;&gt;&#39;/public&#39;&lt;/span&gt;))

 &lt;span class=&quot;comment&quot;&gt;// handle every other route with index.html, which will contain&lt;/span&gt;
 &lt;span class=&quot;comment&quot;&gt;// a script tag to your application&#39;s JavaScript file(s).&lt;/span&gt;
 app.get(&lt;span class=&quot;string&quot;&gt;&#39;*&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;request, response&lt;/span&gt;)&lt;/span&gt;{
   response.sendFile(path.resolve(__dirname, &lt;span class=&quot;string&quot;&gt;&#39;public&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;index.html&#39;&lt;/span&gt;))
 })

 app.listen(port)
 &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;server started on port &quot;&lt;/span&gt; + port)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;header-3&quot;&gt;使用Isomorphic&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;routes.jsx&lt;/code&gt; 定义需要同构的React Routes：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Main=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;./src/main&quot;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Child=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;./src/child&quot;&lt;/span&gt;);

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; routes={
     path:&lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt;,
     component:Main,
     childRoutes:[
         {path:&lt;span class=&quot;string&quot;&gt;&quot;/child/:id&quot;&lt;/span&gt;,component:Child},
         {path:&lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;,component:NoMatch}
     ]
 };
 &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports=routes;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;app.jsx&lt;/code&gt; 实现Client端渲染：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; routes=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;./src/routes&quot;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; createBrowserHistory =&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;history/lib/createBrowserHistory&quot;&lt;/span&gt;);
 ReactDOM.render(&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Router&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;routes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{routes}&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;history&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{createBrowserHistory()}&lt;/span&gt; /&amp;gt;&lt;/span&gt;,
     document.getElementById(&quot;app&quot;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;app.js&lt;/code&gt; 编译生成的Client端可执行的js文件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt; &amp;gt; browserify app.jsx -t babelify --presets react -o app.js --extension .jsx
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;index.ejs&lt;/code&gt; 定义主页面，加载上面生成的Client的js文件&lt;code&gt;app.js&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullhtml&quot;&gt; &lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello React-Router &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;

   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;app&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;

   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/libs/react/react.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/libs/react/react-dom.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/app.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;

 &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;server.js&lt;/code&gt; 定义Server端响应渲染&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;babel-core/register&#39;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; React=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react&quot;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ReactDOMServer=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react-dom/server&quot;&lt;/span&gt;);

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Router=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;react-router&#39;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; match=Router.match;
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; RoutingContext=Router.RoutingContext;
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; routes = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;./src/routes&quot;&lt;/span&gt;);

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; express=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;express&quot;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; app = express();
 app.set(&lt;span class=&quot;string&quot;&gt;&#39;view engine&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;ejs&#39;&lt;/span&gt;);
 app.use(express.static(&lt;span class=&quot;string&quot;&gt;&#39;public&#39;&lt;/span&gt;));

 app.use(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;req, res, next&lt;/span&gt;) &lt;/span&gt;{
     &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(req.url);
     match({routes,location:req.url},&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;error, redirectLocation, renderProps&lt;/span&gt;)&lt;/span&gt;{
         &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (error) {
           res.status(&lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;).send(error.message)
         } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (redirectLocation) {
           res.redirect(&lt;span class=&quot;number&quot;&gt;302&lt;/span&gt;, redirectLocation.pathname + redirectLocation.search)
         } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (renderProps) {
             &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;render react router&quot;&lt;/span&gt;);
             &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; element=React.createFactory(RoutingContext)(renderProps);
             &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; elementStr=ReactDOMServer.renderToString(element);
             &lt;span class=&quot;comment&quot;&gt;//res.status(200).send(elementStr);&lt;/span&gt;
             res.render(&lt;span class=&quot;string&quot;&gt;&quot;index&quot;&lt;/span&gt;,{content:elementStr});
         } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {
           res.status(&lt;span class=&quot;number&quot;&gt;404&lt;/span&gt;).send(&lt;span class=&quot;string&quot;&gt;&#39;Not found&#39;&lt;/span&gt;)
         }
     })
 })

 app.listen(&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err, result&lt;/span&gt;)&lt;/span&gt;{
     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(err);
       &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Listening at localhost:3000&#39;&lt;/span&gt;);
 });
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行&lt;code&gt;node server&lt;/code&gt;启动服务查看效果&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;header-4&quot;&gt;Issues&lt;/h2&gt;
&lt;h3 id=&quot;header-5&quot;&gt;1. Add &lt;code&gt;&amp;lt;Routes baseHref&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rackt/react-router/issues/353&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Issue on Github&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; { createHistory, useBasename } &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;history&#39;&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; history = useBasename(createHistory)({
  basename: &lt;span class=&quot;string&quot;&gt;&#39;/my-custom-root&#39;&lt;/span&gt;
})
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&amp;lt;Router history={history}&amp;gt;
    &amp;lt;Route path=&quot;/&quot; component={App}&amp;gt;&amp;lt;/Route&amp;gt;
&amp;lt;/Router&amp;gt;

&amp;lt;Link path=&quot;/some_path&quot;&amp;gt;some_path&amp;lt;/Link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;header-6&quot;&gt;2. Passing props to routes&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rackt/react-router/issues/1531&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Issue on Github&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;React.render((
  &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Router&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;path&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;component&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{RootComp}&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;myprop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;foo&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;path&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;foo&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;component&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{FooComp}&lt;/span&gt;&amp;gt;&lt;/span&gt;
           &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;path&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;bar&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;component&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{BarComp}&lt;/span&gt; /&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;Route&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;Route&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;Router&lt;/span&gt;&amp;gt;&lt;/span&gt;
), document.getElementById(&#39;example&#39;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Option 1) With route attributes&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RootComp&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;{
    render: {
        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.props.route.myprop &lt;span class=&quot;comment&quot;&gt;// == &quot;foo&quot; (this.props.routes[0].myprop)&lt;/span&gt;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Option 2) To first level children with React.cloneElement()&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RootComp&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;{
    render: {
        React.cloneElement(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.props.children, {myprop: &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.route.myprop})
    }
}
&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FooComp&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;{
    render: {
        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.props.myprop &lt;span class=&quot;comment&quot;&gt;// == &quot;foo&quot;&lt;/span&gt;
    }
}
&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BarComp&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;React&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;{
    render: {
        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.props.myprop &lt;span class=&quot;comment&quot;&gt;// == undefined&lt;/span&gt;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Option 3) To all route components with Router.createElement&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/rackt/react-router/blob/master/docs/API.md#createelementcomponent-props&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&amp;lt;Router createElement={createElement} /&amp;gt;

&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createElement&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;Component, props&lt;/span&gt;) &lt;/span&gt;{
   &lt;span class=&quot;comment&quot;&gt;// Add myprop to props for all route components&lt;/span&gt;
    _.extend(props, {myprop: &lt;span class=&quot;string&quot;&gt;&quot;foo&quot;&lt;/span&gt;})
  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Component&lt;/span&gt; {&lt;span class=&quot;attr&quot;&gt;...props&lt;/span&gt;}/&amp;gt;&lt;/span&gt;
}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;header-7&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rackt/react-router&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-router on Github &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sixDegree/react-advance&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;my demos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      using react router build front router
    
    </summary>
    
    
      <category term="ReactJs" scheme="http://sixdegree.github.io/tags/ReactJs/"/>
    
  </entry>
  
  <entry>
    <title>ReactJS基础</title>
    <link href="http://sixdegree.github.io/2016/01/03/ReactJS-Basic.html"/>
    <id>http://sixdegree.github.io/2016/01/03/ReactJS-Basic.html</id>
    <published>2016-01-02T16:00:00.000Z</published>
    <updated>2016-04-12T01:03:53.220Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;使用Browserify或Webpack构建ReactJS；&lt;/li&gt;
&lt;li&gt;ReactJS基本特性介绍（比如：Class,Component,Element,Factory,Props,State,LifeCycle,Event）；&lt;/li&gt;
&lt;li&gt;通过一个简单实例介绍了ReactJS的Isomorphic同构功能的基本使用方法&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sixDegree/react-starter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;My Demos&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;header-1&quot;&gt;Starter&lt;/h2&gt;
&lt;h3 id=&quot;header-2&quot;&gt;Using Directly&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;&amp;gt; bower install react react-dom babel
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;nullhtml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;example&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;bower_components/react/react.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;bower_components/react/react-dom.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;bower_components/babel/browser.min.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/babel&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;
    &lt;span class=&quot;comment&quot;&gt;// write your reactjs here&lt;/span&gt;
    ReactDOM.render(
      &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, world!&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;,
      &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;example&#39;&lt;/span&gt;)
    );
&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;header-3&quot;&gt;Using Builded JS Depend on npm&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载ReactJS依赖包：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt; &amp;gt; npm install react react-dom --save
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编写React：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;comment&quot;&gt;// ./src/xx.jsx&lt;/span&gt;
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; React=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react&quot;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ReactDOM=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react-dom&quot;&lt;/span&gt;);

 ReactDOM.render(&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello, world!&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;));

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; element = React.createElement(&lt;span class=&quot;string&quot;&gt;&#39;h1&#39;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Hello, world!&#39;&lt;/span&gt;);
 ReactDOM.render(element,&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;example&#39;&lt;/span&gt;));
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编译生成可直接在浏览器执行的JS (这里提供两种方法，参考下文)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Method1: Build By Browserify&lt;/li&gt;
&lt;li&gt;Method2: Build By Webpack&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTML页面中直接调用生成的JS文件：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullhtml&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;app&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;xxx.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;可通过Gulp或Webpack插件实现Server热加载实时预览等功能，eg：&lt;ul&gt;
&lt;li&gt;gulp插件： &lt;code&gt;gulp-server-livereload&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;webpack插件：&lt;code&gt;webpack-dev-server&lt;/code&gt; （还可结合使用&lt;code&gt;react-hot&lt;/code&gt;高效react热加载功能）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;header-4&quot;&gt;Build by browserify&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载依赖包：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;  &amp;gt; npm install browserify -g
  &amp;gt; npm install babelify --save
  &amp;gt; npm install watchify -g
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;  &lt;a href=&quot;https://github.com/babel/babelify&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;babelify&lt;/code&gt;&lt;/a&gt; ：合并模块时对 ES6 和 ES7 进行编译转换，同时还可以对 JSX 进行编译转换，也可使用 &lt;a href=&quot;https://www.npmjs.com/package/reactify&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;reactify&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;   &lt;a href=&quot;https://github.com/substack/watchify&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; &lt;code&gt;watchify&lt;/code&gt;&lt;/a&gt; ：监听，配合 &lt;code&gt;browserify&lt;/code&gt; 实现实时合并 (是一个&lt;code&gt;browserify&lt;/code&gt;的封装，配置同&lt;code&gt;browserify&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;执行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;browserify&lt;/code&gt; 合并模块&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;&amp;gt; browserify ./src/app.jsx -t babelify -o ./dist/bundle.js

//如果require的module的后缀不为.js,.json，需添加-extension参数，eg：
&amp;gt; browserify ./src/app.jsx -t babelify -o ./dist/bundle.js --extension .jsx
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;watchify&lt;/code&gt; 监听&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; watchify ./src/app.jsx -t babelify --extension .jsx  -o ./dist/bundle.js -v
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可在&lt;code&gt;package.json&lt;/code&gt;中配置&lt;code&gt;browserify&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljson&quot;&gt;&amp;quot;browserify&amp;quot; : {
  &amp;quot;transform&amp;quot;: [
      [&amp;quot;reactify&amp;quot;, {&amp;quot;es6&amp;quot;: true}]
  ]，
  &amp;quot;extensions&amp;quot;:[&amp;quot;.jsx&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;&amp;gt; browserify xxx.jsx -o xxx.js
&amp;gt; watchify xxx.jsx -o xxx.js
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;+ 可使用`gulp`

```javascript
var gulp=require(&quot;gulp&quot;);
var gutil=require(&quot;gulp-util&quot;);
var source = require(&#39;vinyl-source-stream&#39;);
var watchify=require(&quot;watchify&quot;);
var browserify = require(&#39;browserify&#39;);
var babelify=require(&quot;babelify&quot;);
var argv=require(&quot;yargs&quot;).argv;

function doBuild(filename){
    if(!filename)
        filename=&quot;app&quot;;

    var b=watchify(browserify({
        entries:[&quot;./src/&quot;+filename+&quot;.jsx&quot;],
        transform:[babelify],
        extensions:[&quot;.jsx&quot;],
        debug: true,
        cache: {},
        packageCache: {},
        fullPaths: true
    }));

    function build(file){
        if(file)
            gutil.log(&#39;Recompiling &#39; + file);
        b.bundle()
        .on(&#39;error&#39;,gutil.log.bind(gutil,&quot;Browserify Error&quot;))
        .pipe(source(filename+&quot;.js&quot;))
        .pipe(gulp.dest(&#39;./dist&#39;));
    };

    build();
    b.on(&#39;update&#39;,build);
}

gulp.task(&#39;build&#39;,function(){
    var filename=argv.n || &quot;app&quot;;
    doBuild(filename);
})
```

```vim
&amp;gt; gulp build
```
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;header-5&quot;&gt;Build by webpack&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载依赖包&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;  &amp;gt; npm install jsx-loader --save
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编写webpack.config.js&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//webpack.config.js&lt;/span&gt;
  &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = {
      entry: &lt;span class=&quot;string&quot;&gt;&quot;./src/questionApp.jsx&quot;&lt;/span&gt;,
      output: {
          path: __dirname+&lt;span class=&quot;string&quot;&gt;&quot;/dist&quot;&lt;/span&gt;,
          filename: &lt;span class=&quot;string&quot;&gt;&quot;questionApp-webpack.js&quot;&lt;/span&gt;
          publicPath:&lt;span class=&quot;string&quot;&gt;&quot;/dist&quot;&lt;/span&gt;
      },
      resolve: {
          extensions: [&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;.js&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;.jsx&#39;&lt;/span&gt;]
      },
      &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;: {
          loaders: [
              &lt;span class=&quot;comment&quot;&gt;//{ test: /\.jsx$/, loader: &quot;babel-loader!jsx-loader?harmony&quot; }&lt;/span&gt;
              { test: &lt;span class=&quot;regexp&quot;&gt;/\.jsx$/&lt;/span&gt;, loader: &lt;span class=&quot;string&quot;&gt;&quot;jsx&quot;&lt;/span&gt; }
          ]
      }
  };
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;  &amp;gt; webpack
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;  或通过webpack-dev-server Visit &lt;a href=&quot;http://127.0.0.1:8080&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8080&lt;/a&gt; with your browser.（先下载包： &lt;code&gt;npm install webpack-dev-server -g&lt;/code&gt;）&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt;  &amp;gt; webpack-dev-server
  //启动热加载
  &amp;gt; webpack-dev-server --hot --inline
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;header-6&quot;&gt;Basic Features&lt;/h2&gt;
&lt;h3 id=&quot;header-7&quot;&gt;Component&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; reactComponent=React.createClass({
    ...
    render:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
        ...
        return ...
    },
    ...
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;header-8&quot;&gt;Element&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; reactElement = React.createElement(type, props, children);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或通过Factory创建Element：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; tag = React.createFactory(type);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; reactElement = tag(props, children);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; element=React.createElement(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;, {className:&lt;span class=&quot;string&quot;&gt;&#39;my-div&#39;&lt;/span&gt;}, &lt;span class=&quot;string&quot;&gt;&#39;Hello, world!&#39;&lt;/span&gt;);

&lt;span class=&quot;comment&quot;&gt;//或：&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; div = React.createFactory(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; element = div({ className: &lt;span class=&quot;string&quot;&gt;&#39;my-div&#39;&lt;/span&gt; },&lt;span class=&quot;string&quot;&gt;&#39;Hello, world!&#39;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;header-9&quot;&gt;Render&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;ReactDOM.render(reactElement,domContainerNode,callback);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用示例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Question=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;./components/question&quot;&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; propOpts={...};

&lt;span class=&quot;comment&quot;&gt;//use createElement:&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; element=React.createElement(Question, propOpts);
ReactDOM.render(element,&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;));

&lt;span class=&quot;comment&quot;&gt;//or use createFactory:&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; QuestionFactory=React.createFactory(Question);
ReactDOM.render(QuestionFactory(propOpts),&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;));

&lt;span class=&quot;comment&quot;&gt;//or use JSX:&lt;/span&gt;
ReactDOM.render(&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;Question&lt;/span&gt; {&lt;span class=&quot;attr&quot;&gt;...propOpts&lt;/span&gt;} /&amp;gt;&lt;/span&gt;,document.getElementById(&#39;app&#39;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ./components/question.jsx:&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; React=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react&quot;&lt;/span&gt;);
&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports=React.createClass({
    ...
    render:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
        ...
        &lt;span class=&quot;comment&quot;&gt;//use JSX:&lt;/span&gt;
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;my-div&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;Question System&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;);
        &lt;span class=&quot;comment&quot;&gt;//or use createElement:&lt;/span&gt;
        &lt;span class=&quot;comment&quot;&gt;//return React.createElement(&#39;div&#39;,{className:my-div},&#39;Question System&#39;);&lt;/span&gt;
    },
    ...
})
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;header-10&quot;&gt;LifeCycle&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Component Lifecycle :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mounting :&lt;ul&gt;
&lt;li&gt;void componentWillMount()&lt;/li&gt;
&lt;li&gt;void componentDidMount()&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Updating :&lt;ul&gt;
&lt;li&gt;receive new props&lt;ul&gt;
&lt;li&gt;void componentWillReceiveProps (object nextProps)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;boolean shouldComponentUpdate(object nextProps, object nextState)&lt;/li&gt;
&lt;li&gt;void componentWillUpdate( object nextProps, object nextState)&lt;/li&gt;
&lt;li&gt;void componentDidUpdate(object prevProps, object prevState)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;UnMount :&lt;ul&gt;
&lt;li&gt;void componentWillUnmount()&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;note:&lt;/strong&gt;&lt;br&gt;    shouldComponentUpdate(nextProps,nextStates) &amp;amp; render()&lt;br&gt;    should in mixin or component (only in one place)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Initial (第一次 render ) :&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-&amp;gt; getDefaultProps&lt;/li&gt;
&lt;li&gt;-&amp;gt; getInitialState&lt;/li&gt;
&lt;li&gt;-&amp;gt; componentWillMount&lt;/li&gt;
&lt;li&gt;-&amp;gt; render&lt;ul&gt;
&lt;li&gt;sub component (do same initial cycle)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-&amp;gt; componentDidmount&lt;/li&gt;
&lt;li&gt;-&amp;gt; RenderFinished!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Update (第n次 render )：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-&amp;gt; shouldComponentUpdate(nextProps,nextState)&lt;ul&gt;
&lt;li&gt;return false – stop here&lt;/li&gt;
&lt;li&gt;return true – go to next&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-&amp;gt; componentWillUpdate(nextProps,nextState)&lt;/li&gt;
&lt;li&gt;-&amp;gt; render&lt;ul&gt;
&lt;li&gt;Sub Component： componentWillReceiveProps(nextProps)&lt;/li&gt;
&lt;li&gt;Sub Component： shouldComponentUpdate(nextProps,nextState)&lt;/li&gt;
&lt;li&gt;Sub Component： componentWillUpdate(nextProps,nextState)&lt;/li&gt;
&lt;li&gt;Sub Component： componentDidUpdate(prevProps,prevState)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-&amp;gt; componentDidUpdate(prevProps,prevState)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Initial （has Mixins）:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-&amp;gt; getDefaultProps – Mixins + Component (merge return) – can’t set same property&lt;/li&gt;
&lt;li&gt;-&amp;gt; getInitialState – Mixins + Component (merge return) – can’t set same property&lt;/li&gt;
&lt;li&gt;-&amp;gt; Mixins: componentWillMount&lt;/li&gt;
&lt;li&gt;-&amp;gt; componentWillMount&lt;/li&gt;
&lt;li&gt;-&amp;gt; render – in Mixins or Component&lt;/li&gt;
&lt;li&gt;-&amp;gt; Mixins: componentDidMount&lt;/li&gt;
&lt;li&gt;-&amp;gt; componentDidMount&lt;/li&gt;
&lt;li&gt;-&amp;gt; RenderFinished!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;update （has Mixins）:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-&amp;gt; shouldComponentUpdate – in Mixins or Component&lt;/li&gt;
&lt;li&gt;-&amp;gt; Mixins: componentWillUpdate&lt;/li&gt;
&lt;li&gt;-&amp;gt; componentWillUpdate&lt;/li&gt;
&lt;li&gt;-&amp;gt; render – in Mixins or Component&lt;/li&gt;
&lt;li&gt;-&amp;gt; Mixins: componentDidUpdate&lt;/li&gt;
&lt;li&gt;-&amp;gt; componentDidUpdate&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;header-11&quot;&gt;Props&lt;/h3&gt;
&lt;p&gt;初始化props：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;getDefaultProps:function(){
    return {...}
},
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可通过定义propTypes限定props，eg：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;propTypes: {
    value: React.PropTypes.object.isRequired,
    onChange: React.PropTypes.func.isRequired,
    onSubmit: React.PropTypes.func.isRequired,
},
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用时传入props参数：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;Tag {...opts} /&amp;gt;
&amp;lt;Tag xxx=&#39;...&#39; yyy={...} zzz=...  ... /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当传入新的props参数时，会触发Component的以下方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;void componentWillReceiveProps (object nextProps)
boolean shouldComponentUpdate(object nextProps, object nextState)
void componentWillUpdate( object nextProps, object nextState)
void render()
void componentDidUpdate(object prevProps, object prevState)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;this.props.children&lt;/code&gt;是获取当前节点的全部子内容&lt;/li&gt;
&lt;li&gt;&lt;code&gt;this.props.xxx&lt;/code&gt;获取参数值（注意不可这样修改props）&lt;/li&gt;
&lt;li&gt;Component间传递：&lt;ul&gt;
&lt;li&gt;Father state/props to Children’ props&lt;/li&gt;
&lt;li&gt;refs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;header-12&quot;&gt;State&lt;/h3&gt;
&lt;p&gt;初始化state：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;getInitialState:function(){
    return {...}
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;获取state值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;this.state.xxx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设置state值：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;this.setState({...})&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;this.state.xxx=...;&lt;/code&gt;,还需调用&lt;code&gt;this.forceUpdate()&lt;/code&gt;生效&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当state变化时会触发以下方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;boolean shouldComponentUpdate(object nextProps, object nextState)
void componentWillUpdate( object nextProps, object nextState)
void render()
void componentDidUpdate(object prevProps, object prevState)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;header-13&quot;&gt;Refs&lt;/h3&gt;
&lt;p&gt;设置ref（可以绑定到 render() 输出的任何组件上去），eg：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;input type=&quot;text&quot; defaultValue={this.state.inputValue} ref=&quot;goodInput&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;获取：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;access the component instance: &lt;code&gt;this.refs.xxx&lt;/code&gt; or &lt;code&gt;this.refs[xxx]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;access the DOM &lt;code&gt;ReactDOM.findDOMNode(componentInstance)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;//在function中抓取我們動態render的某個UI元素
this.refs.goodInput

this.refs.goodInput.value
this.refs.goodInput.focus()
ReactDOM.findDOMNode(this.refs.goodInput).focus();
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;header-14&quot;&gt;Form&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Interactive props: &lt;code&gt;value&lt;/code&gt;,&lt;code&gt;checked&lt;/code&gt;,&lt;code&gt;selected&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;SyntheticEvent ：React对Event进行了封装&lt;/li&gt;
&lt;li&gt;Form Events: &lt;code&gt;onChange&lt;/code&gt;, &lt;code&gt;onInput&lt;/code&gt;,&lt;code&gt;onClick&lt;/code&gt;, &lt;code&gt;onSubmit&lt;/code&gt;,&lt;code&gt;onReset&lt;/code&gt;,…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;eg:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;render:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (
    &amp;lt;form onSubmit={this.submitHandler}&amp;gt;
        &amp;lt;input type=&quot;text&quot; value={this.state.inputValue} onChange={this.inputHandler}/&amp;gt;
        &amp;lt;br/&amp;gt;
        &amp;lt;input type=&quot;radio&quot; name=&quot;goodRadio&quot; value=&quot;A&quot; defaultChecked onChange={this.radioHandler}/&amp;gt;A
        &amp;lt;input type=&quot;radio&quot; name=&quot;goodRadio&quot; value=&quot;B&quot; onChange={this.radioHandler}/&amp;gt;B
        &amp;lt;input type=&quot;radio&quot; name=&quot;goodRadio&quot; value=&quot;C&quot; onChange={this.radioHandler}/&amp;gt;C
        &amp;lt;button type=&quot;reset&quot; &amp;gt;Reset&amp;lt;/button&amp;gt; &amp;lt;button type=&quot;submit&quot;&amp;gt;Submit&amp;lt;/button&amp;gt;
    &amp;lt;/form&amp;gt;
    )
},

submitHandler:function(e){
    // React对event进行了优化，若未使用则e填充值都为null
    console.log(e);
    console.log(e.target);
    console.log(e.type);
    console.log(this.state);
    e.preventDefault();
},
resetHandler:function(e){
    if(e) e.preventDefault();
    ReactDOM.findDOMNode(this.refs.regForm).reset();
},
inputHandler:function(e){
    this.setState({inputValue:e.target.value});
},
radioHandler:function(e){
    this.setState({radioValue:e.target.value});
},
...
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;header-15&quot;&gt;Isomorphic&lt;/h2&gt;
&lt;p&gt;同构，可在client或server端渲染React对象，统一使用，提供渲染速度，利于SEO&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;ReactDOMServer&lt;/code&gt; (in &lt;code&gt;react-dom/server&lt;/code&gt; package)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;string renderToString(ReactElement element)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;string renderToStaticMarkup(ReactElement element)&lt;/code&gt; //doesn’t create extra DOM attributes such as data-react-id, that React uses internally&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;header-16&quot;&gt;一个简单示例&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;messageBox.jsx&lt;/code&gt; 定义需要同构的React Component：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; MessageBox = React.createClass({
   getInitialState: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{
     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; {value: &lt;span class=&quot;string&quot;&gt;&#39;Hello!&#39;&lt;/span&gt;};
   },
   handleChange: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;{
     &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setState({value: event.target.value});
   },
   render: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{
     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; value = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state.value;
     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (
       &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
           &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;This is Isomorphic Test:&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{value}&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onChange&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;{this.handleChange}&lt;/span&gt; /&amp;gt;&lt;/span&gt;
         &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Inputed:{value}&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;
       &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;
     );
   }
 });
 module.exports=MessageBox;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;app.jsx&lt;/code&gt; 实现Client端渲染：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; MessageBox=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;messageBox.jsx&#39;&lt;/span&gt;);
 ReactDOM.render(&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;MessageBox&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;));
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;app.js&lt;/code&gt; 编译生成的Client端可执行的js文件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullvim&quot;&gt; &amp;gt; browserify app.jsx -t babelify --presets react -o app.js --extension .jsx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt; 生成的js如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;e&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;t,n,r&lt;/span&gt;)&lt;/span&gt;{&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;s&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;o,u&lt;/span&gt;)&lt;/span&gt;{&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!n[o]){&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!t[o]){&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a=&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;==&lt;span class=&quot;string&quot;&gt;&quot;function&quot;&lt;/span&gt;&amp;amp;&amp;amp;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!u&amp;amp;&amp;amp;a)&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a(o,!&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i)&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; i(o,!&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Error&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Cannot find module &#39;&quot;&lt;/span&gt;+o+&lt;span class=&quot;string&quot;&gt;&quot;&#39;&quot;&lt;/span&gt;);&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; f.code=&lt;span class=&quot;string&quot;&gt;&quot;MODULE_NOT_FOUND&quot;&lt;/span&gt;,f}&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; l=n[o]={exports:{}};t[o][&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].call(l.exports,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;)&lt;/span&gt;{&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n=t[o][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;][e];&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s(n?n:e)},l,l.exports,e,t,n,r)}&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n[o].exports}&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;==&lt;span class=&quot;string&quot;&gt;&quot;function&quot;&lt;/span&gt;&amp;amp;&amp;amp;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;o&amp;lt;r.length;o++)s(r[o]);&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s})({&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:[&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;require,module,exports&lt;/span&gt;)&lt;/span&gt;{
&lt;span class=&quot;meta&quot;&gt; &#39;use strict&#39;&lt;/span&gt;;

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; MessageBox = React.createClass({
   displayName: &lt;span class=&quot;string&quot;&gt;&#39;MessageBox&#39;&lt;/span&gt;,

   getInitialState: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getInitialState&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{
     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; { value: &lt;span class=&quot;string&quot;&gt;&#39;Hello!&#39;&lt;/span&gt; };
   },
   handleChange: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleChange&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;{
     &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.setState({ value: event.target.value });
   },
   render: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{
     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; value = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.state.value;
     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; React.createElement(
       &lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;,
       &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;,
       React.createElement(
         &lt;span class=&quot;string&quot;&gt;&#39;h1&#39;&lt;/span&gt;,
         &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;,
         &lt;span class=&quot;string&quot;&gt;&#39;This is Isomorphic Test:&#39;&lt;/span&gt;
       ),
       React.createElement(&lt;span class=&quot;string&quot;&gt;&#39;input&#39;&lt;/span&gt;, { type: &lt;span class=&quot;string&quot;&gt;&#39;text&#39;&lt;/span&gt;, value: value, onChange: &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handleChange }),
       React.createElement(
         &lt;span class=&quot;string&quot;&gt;&#39;p&#39;&lt;/span&gt;,
         &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;,
         &lt;span class=&quot;string&quot;&gt;&#39;Inputed:&#39;&lt;/span&gt;,
         value
       )
     );
   }
 });

 ReactDOM.render(React.createElement(MessageBox, &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;), &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;app&#39;&lt;/span&gt;));

 },{}]},{},[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;index.html&lt;/code&gt; 定义主页面，加载上面生成的Client的js文件&lt;code&gt;app.js&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nullhtml&quot;&gt; &lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Hello React!&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;

   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;app&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;{content}&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;

   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;libs/react/react.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;libs/react/react-dom.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;app.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;

 &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;server.js&lt;/code&gt; 定义Server端响应渲染&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;babel-core/register&quot;&lt;/span&gt;);

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; React=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react&quot;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ReactDOMServer=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;react-dom/server&quot;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; http=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;http&quot;&lt;/span&gt;);
 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fs=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;fs&quot;&lt;/span&gt;);

 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; server=http.createServer(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;req,res&lt;/span&gt;)&lt;/span&gt;{
     &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(req.url);
     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(req.url==&lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt; || req.url==&lt;span class=&quot;string&quot;&gt;&#39;/index.html&#39;&lt;/span&gt;){
         &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; element = React.createElement(&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;./messageBox.jsx&quot;&lt;/span&gt;));
         &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; reactHtml = ReactDOMServer.renderToString(element);

         fs.readFile(&lt;span class=&quot;string&quot;&gt;&quot;./index.html&quot;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err,data&lt;/span&gt;)&lt;/span&gt;{
             &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; err;
             res.writeHead(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;,{&lt;span class=&quot;string&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;text/html&#39;&lt;/span&gt;});
               res.end(data.toString().replace(&lt;span class=&quot;string&quot;&gt;&quot;{content}&quot;&lt;/span&gt;,reactHtml));
         });
     }&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(req.url.startsWith(&lt;span class=&quot;string&quot;&gt;&quot;/libs&quot;&lt;/span&gt;)){
         fs.readFile(&lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;+req.url,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err,data&lt;/span&gt;)&lt;/span&gt;{
             &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(err) &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; err;
             res.writeHead(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;);
               res.end(data);
         })
     }&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;{
         res.writeHead(&lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;,{&lt;span class=&quot;string&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;text/plain&#39;&lt;/span&gt;});
         res.end(&lt;span class=&quot;string&quot;&gt;&quot;not found&quot;&lt;/span&gt;);
     }
 });

 server.listen(&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;localhost&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;err, result&lt;/span&gt;) &lt;/span&gt;{
   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err) &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(err);
   &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Listening at localhost:3000&#39;&lt;/span&gt;);
 });
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行&lt;code&gt;node server&lt;/code&gt;启动服务查看效果&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt;&lt;br&gt;如果出现无法识别解析JSX的错误，请检查使用的&lt;code&gt;babel-core&lt;/code&gt;版本，6和5的使用上会有些不同，具体可参考&lt;a href=&quot;http://jamesknelson.com/the-six-things-you-need-to-know-about-babel-6/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The Six Things You Need To Know About Babel 6&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;header-17&quot;&gt;Use Extra JS in React&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;eg:&lt;/strong&gt; Using JQuery in React&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $=&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;jquery&quot;&lt;/span&gt;);
&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports=React.createClass({
    componentDidMount:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
        &lt;span class=&quot;comment&quot;&gt;//一般在这里进行初始化绑定dom&lt;/span&gt;
        &lt;span class=&quot;comment&quot;&gt;//eg: $(&#39;#xxx&#39;).modal(&#39;hide&#39;);&lt;/span&gt;
    },
    ...
    &lt;span class=&quot;comment&quot;&gt;//可在其他方法中调用操作&lt;/span&gt;
    &lt;span class=&quot;comment&quot;&gt;//eg: $(&#39;#xxx&#39;).modal(&#39;show&#39;);&lt;/span&gt;
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;eg:&lt;/strong&gt; Using highlight.js in React &lt;a href=&quot;https://github.com/isagalaev/highlight.js/issues/925&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Issue on Github&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;nulljavascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hljs =&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;highlight.js&quot;&lt;/span&gt;);
&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Pretty = React.createClass({
    componentDidMount: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{
        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; current = React.findDOMNode(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);
        hljs.highlightBlock(current);
    },
    render: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;pre&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;custom-json-body&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;className&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;json&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;{JSON.stringify(this.props.json, null, 2)}&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;code&lt;/span&gt;&amp;gt;&lt;/span&gt;
               &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;pre&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;;
    }
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt;&lt;br&gt;一般不推荐在React中注入其他作用域的代码，推荐使用相应的React Plugins或自行扩展实现功能（尽量保持都在React的作用域）&lt;/p&gt;
&lt;h2 id=&quot;header-18&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ReactJS&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Doc En&lt;/a&gt; | &lt;a href=&quot;http://reactjs.cn/react/docs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Doc Cn&lt;/a&gt; | &lt;a href=&quot;https://github.com/facebook/react&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://react-china.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React China&lt;/a&gt; | &lt;a href=&quot;http://wiki.jikexueyuan.com/project/react/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文版开发手册&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ruanyf/react-demos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Demos from ruanyf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Build&lt;ul&gt;
&lt;li&gt;Browserify&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://browserify.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt; | &lt;a href=&quot;https://github.com/substack/node-browserify#usage&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://segmentfault.com/a/1190000002941361&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;前端模块及依赖管理的新选择：Browserify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/substack/watchify&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;watchify on Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Webpack&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://webpack.github.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gitbook.com/book/zhaoda/webpack/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;中文指南&lt;/a&gt; | &lt;a href=&quot;https://www.gitbook.com/book/wohugb/react-webpack-cookbook/details&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-webpack-cookbook&lt;/a&gt; | &lt;a href=&quot;https://christianalfoni.github.io/react-webpack-cookbook&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cookbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://segmentfault.com/a/1190000002551952&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;入门指迷&lt;/a&gt; | &lt;a href=&quot;http://www.07net01.com/2015/08/webpack%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;学习笔记&lt;/a&gt; | &lt;a href=&quot;http://segmentfault.com/a/1190000002767365&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;轻松入门React和Webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ruanyf/webpack-demos&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Demos from ruanyf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Babel&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://babeljs.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://cnodejs.org/topic/56460e0d89b4b49902e7fbd3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在node中使用babel6的一些简单分享&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sixDegree/react-starter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;My Demos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      using reactJS build front view (web component)
    
    </summary>
    
    
      <category term="ReactJs" scheme="http://sixdegree.github.io/tags/ReactJs/"/>
    
  </entry>
  
</feed>
